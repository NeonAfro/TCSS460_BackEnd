{"info":{"_postman_id":"4940df0d-57ac-488d-961e-bc9971b1b9e8","name":"Tests","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"auth/forgotPassword","item":[{"name":"201: Register Created","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is Success 201\", () => {\r","    pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have id\", () => {\r","    pm.expect(body).to.have.ownProperty(\"id\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"50ab372e-fb99-4e1a-8d6d-3a8d253843ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"200: OK","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have message 'Password updated successfully'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Password updated successfully\");\r","});\r","\r","pm.test(\"Response to have resetToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"resetToken\");\r","});\r",""],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));"],"type":"text/javascript","packages":{}}}],"id":"15551d05-9e80-4956-bd78-82bde79cfb61","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Missing Parameters","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Missing a parameter'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Missing a parameter\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":[""],"type":"text/javascript","packages":{}}}],"id":"efccba1a-706b-4c02-82ae-0b96c841df81","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Password Mismatch","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Missing a parameter'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"The passwords do not match\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}}],"id":"eedb47db-7910-47fa-bd29-4cd6ddb90709","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"wrong password!\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid Email","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid email - please refer to registration documentation'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid email - please refer to registration documentation\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}}],"id":"410c9c54-3bf3-4e3a-85a8-fba733e301f8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"wrong.email$wrong.com\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid Phone Number","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid phone number - please refer to registration documentation'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid phone number - please refer to registration documentation\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));"],"type":"text/javascript","packages":{}}}],"id":"acd1afb7-dacd-455f-bcef-2dcec6b1e17e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}-420\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid NewPassword","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid new password - please refer to documentation'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid new password - please refer to documentation\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["let invalidPassword = pm.variables.replaceIn('{{$randomPassword}}');\r","pm.environment.set(\"new_password\", invalidPassword.substring(0,4));"],"type":"text/javascript","packages":{}}}],"id":"55926e3d-aa43-456b-bd2a-fcfae91cc644","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"404: User does not exist","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 404\", () => {\r","    pm.response.to.have.status(404);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'User does not exist within the Database'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"User does not exist within the Database\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r",""],"type":"text/javascript","packages":{}}}],"id":"8b3c8ceb-7ad6-4321-be4b-a898209bed65","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"500: DB Query Error","event":[{"listen":"prerequest","script":{"id":"b7bd6ba5-2108-4e6d-b7dd-560f3df7d55f","exec":["pm.environment.set(\"old_password_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"edc71dd7-2557-44bd-8364-88b224ed3aec","exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Unexpected issue on account retrieval in the database'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Unexpected issue on account retrieval in the database\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"492e3976-20fe-42fe-b247-0c374f8022a4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"id":"b7bd6ba5-2108-4e6d-b7dd-560f3df7d55f","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"edc71dd7-2557-44bd-8364-88b224ed3aec","exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Unexpected issue on retrieving user in the database'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Unexpected issue on retrieving user in the database\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"cfde59db-ad5f-4874-97c9-e1210f8c3b41","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"]}},"response":[]},{"name":"500: Password Update Error","event":[{"listen":"prerequest","script":{"id":"b7bd6ba5-2108-4e6d-b7dd-560f3df7d55f","exec":["pm.environment.set(\"old_password_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"edc71dd7-2557-44bd-8364-88b224ed3aec","exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Unexpected issue on updating password in the database'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Unexpected issue on updating password in the database\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"0fe5e239-996d-4e9a-a504-a780cab69eae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"username\" : \"{{username}}\",\n    \"email\" : \"{{email}}\",\n    \"phone\" : \"{{phone_number}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/forgotPassword","host":["localhost"],"port":"4000","path":["forgotPassword"]}},"response":[]}],"id":"bfd4213e-ce7c-469b-a00e-94d4453eb38e"},{"name":"auth/login","item":[{"name":"201: Register Created","event":[{"listen":"prerequest","script":{"id":"5029ea69-71a9-46dc-94d8-068bca82c96d","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"d8645c75-51c3-476f-a678-8edff8ab6b16","exec":["pm.test(\"Response is Success 201\", () => {\r","    pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have id\", () => {\r","    pm.expect(body).to.have.ownProperty(\"id\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"c3f8f744-1c08-4f5c-bc46-4862a502327b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"]}},"response":[]},{"name":"200: OK","event":[{"listen":"test","script":{"id":"20a8c0dc-f730-4ca5-b674-94f4221e1e04","exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have user object\", () => {\r","    pm.expect(body).to.have.ownProperty(\"user\");\r","});\r","\r","pm.test(\"Response to have user id\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"id\");\r","});\r","\r","pm.test(\"Response to have user email\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"email\");\r","});\r","\r","pm.test(\"Response to have user name\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"name\");\r","});\r","\r","pm.test(\"Response to have user role\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"role\");\r","});\r","\r","pm.environment.set(\"User Token\", body.accessToken);"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"3f91e8a4-7a81-4f68-872d-23d212db71e7","exec":[""],"type":"text/javascript","packages":{}}}],"id":"1252df71-9b71-4267-ab3b-ea422ec5e197","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"email\" : \"{{email}}\",\n    \"password\" : \"{{old_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/login","host":["localhost"],"port":"4000","path":["login"]}},"response":[]},{"name":"400: Missing Parameters","event":[{"listen":"test","script":{"id":"b1b5e408-b55b-4833-be3c-676801f362f6","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Missing required information'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Missing required information\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"b377e6a6-a005-434a-9181-92fcd97dbfd8","exec":[],"type":"text/javascript"}}],"id":"6fce5932-edd4-4c0d-b043-713fd318f2a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"email\" : \"{{email}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/login","host":["localhost"],"port":"4000","path":["login"]}},"response":[]},{"name":"400: Invalid Credentials(Password)","event":[{"listen":"prerequest","script":{"id":"3f8f515a-3b81-4dc5-9525-d699c86eee6a","exec":["\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"1efedf8c-9ee8-45d9-b63f-9d2a227dfabd","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid Credentials'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid Credentials\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"3c35c4f4-d404-4915-9192-d3c5bd5bd482","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{old_password}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/login","host":["localhost"],"port":"4000","path":["login"]}},"response":[]},{"name":"400: Invalid Credentials(Email)","event":[{"listen":"prerequest","script":{"id":"6fabf655-c7cb-44e9-8483-cbbf0905aeaf","exec":["pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"c1356202-5774-4fd9-8df2-8d7d5c5bfbbb","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid Credentials'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid Credentials\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"1f754ba4-8f89-4504-8752-70510d814e4c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{old_password}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/login","host":["localhost"],"port":"4000","path":["login"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"id":"b7bd6ba5-2108-4e6d-b7dd-560f3df7d55f","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"edc71dd7-2557-44bd-8364-88b224ed3aec","exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"server error - contact support\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"b56c087a-99a7-4ab3-a29f-a907274a6dfe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"email\" : \"{{email}}\",\n    \"password\" : \"{{old_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/login","host":["localhost"],"port":"4000","path":["login"]}},"response":[]}],"id":"fb7b2455-2e81-48ef-8dcf-ef8d273d2c10"},{"name":"auth/register","item":[{"name":"201: Created","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is Success 201\", () => {\r","    pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have id\", () => {\r","    pm.expect(body).to.have.ownProperty(\"id\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"b7f38de7-74c7-4fee-8846-f9498ba84a1c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Missing Parameters","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Missing required information'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Missing required information\");","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"2e5b5ca6-fae3-485a-b54d-1531c8d9d0ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"algorithm","value":"HS256","type":"string"},{"key":"isSecretBase64Encoded","value":false,"type":"boolean"},{"key":"payload","value":"{}","type":"string"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid Password","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Invalid or missing password - please refer to documentation'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Invalid or missing password - please refer to documentation\");","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));","","let invalidPassword = pm.variables.replaceIn('{{$randomPassword}}');","pm.environment.set(\"old_password\", invalidPassword.substring(0,4));"],"type":"text/javascript","packages":{}}}],"id":"317e887c-4d48-45b4-bf73-c96fbc1532b1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"algorithm","value":"HS256","type":"string"},{"key":"isSecretBase64Encoded","value":false,"type":"boolean"},{"key":"payload","value":"{}","type":"string"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid Phone Number","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Invalid or missing phone number - please refer to documentation'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Invalid or missing phone number - please refer to documentation\");","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","\r","let invalidPhoneNumber = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r","pm.environment.set(\"phone_number\", invalidPhoneNumber.substring(0,4));"],"type":"text/javascript","packages":{}}}],"id":"5799b07a-d563-4f66-bd0a-58e83e163379","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"algorithm","value":"HS256","type":"string"},{"key":"isSecretBase64Encoded","value":false,"type":"boolean"},{"key":"payload","value":"{}","type":"string"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid Email","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Invalid or missing email - please refer to documentation'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Invalid or missing email - please refer to documentation\");","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));\r","\r","let invalidEmail = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r","pm.environment.set(\"email\", invalidEmail.substring(0,4));"],"type":"text/javascript","packages":{}}}],"id":"b37979f4-ab72-4e02-adee-1d05b2ccce6e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"algorithm","value":"HS256","type":"string"},{"key":"isSecretBase64Encoded","value":false,"type":"boolean"},{"key":"payload","value":"{}","type":"string"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Invalid Role","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing role - Must be between 1 and 5'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing role - Must be between 1 and 5\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"fd4aeb26-46ab-4246-b597-07cb044599fc","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"algorithm","value":"HS256","type":"string"},{"key":"isSecretBase64Encoded","value":false,"type":"boolean"},{"key":"payload","value":"{}","type":"string"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"6\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"201: Created Persist Username","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is Success 201\", () => {\r","    pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have id\", () => {\r","    pm.expect(body).to.have.ownProperty(\"id\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"93db9933-1f66-4272-b891-afec26ab0cf0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Username exists","event":[{"listen":"test","script":{"id":"6f76f459-c18f-45f6-a7eb-14ed80b1ddc7","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Username exists'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Username exists\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"a9abcbed-a1d5-4461-a771-1606ff71c42d","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"2bcf88bc-94a5-4531-a70f-62a8b342a362","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"]}},"response":[]},{"name":"201: Created Persist Email","event":[{"listen":"test","script":{"id":"071fc258-1df8-441d-96be-811ab80cb484","exec":["pm.test(\"Response is Success 201\", () => {\r","    pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have id\", () => {\r","    pm.expect(body).to.have.ownProperty(\"id\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c090db91-9d8d-4764-874f-ed04226a3216","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"69e85ca8-c000-464c-b284-d70527bd451c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"],"query":[{"key":"firstname","value":"\"\"","type":"text","disabled":true}]}},"response":[]},{"name":"400: Email exists","event":[{"listen":"test","script":{"id":"fe03c6e6-36a7-45ad-b277-15b8c96f4622","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Email exists'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Email exists\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"c3c65f5b-b45f-48c8-b1c6-1ad18e043195","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}}],"id":"f22cc50c-57c5-4ffd-ada1-a80fba4bf261","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"id":"b7bd6ba5-2108-4e6d-b7dd-560f3df7d55f","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"edc71dd7-2557-44bd-8364-88b224ed3aec","exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"server error - contact support\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"3a6e3659-0db7-475d-a0b7-9a88a9faf27d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"]}},"response":[]}],"id":"4daf7762-5ab0-4609-b256-4d2ded7e2add"},{"name":"closed/changePassword","item":[{"name":"201: Register Created","event":[{"listen":"prerequest","script":{"id":"5029ea69-71a9-46dc-94d8-068bca82c96d","exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"d8645c75-51c3-476f-a678-8edff8ab6b16","exec":["pm.test(\"Response is Success 201\", () => {\r","    pm.response.to.have.status(201);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have id\", () => {\r","    pm.expect(body).to.have.ownProperty(\"id\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"21ee4a83-e79a-468a-9914-0186ff19374a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"","value":"","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"email\": \"{{email}}\",\n    \"username\": \"{{username}}\",\n    \"password\": \"{{old_password}}\",\n    \"role\": \"3\",\n    \"phone\": \"{{phone_number}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/register","host":["localhost"],"port":"4000","path":["register"]}},"response":[]},{"name":"200: Login OK","event":[{"listen":"test","script":{"id":"20a8c0dc-f730-4ca5-b674-94f4221e1e04","exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","\r","pm.test(\"Response to have accessToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"accessToken\");\r","});\r","\r","pm.test(\"Response to have user object\", () => {\r","    pm.expect(body).to.have.ownProperty(\"user\");\r","});\r","\r","pm.test(\"Response to have user id\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"id\");\r","});\r","\r","pm.test(\"Response to have user email\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"email\");\r","});\r","\r","pm.test(\"Response to have user name\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"name\");\r","});\r","\r","pm.test(\"Response to have user role\", () => {\r","    pm.expect(body.user).to.have.ownProperty(\"role\");\r","});\r","\r","pm.environment.set(\"User Token\", body.accessToken);"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"3f91e8a4-7a81-4f68-872d-23d212db71e7","exec":[""],"type":"text/javascript","packages":{}}}],"id":"8705e505-561f-421f-8618-1760b38ee599","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"email\" : \"{{email}}\",\n    \"password\" : \"{{old_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/login","host":["localhost"],"port":"4000","path":["login"]}},"response":[]},{"name":"200: OK","event":[{"listen":"prerequest","script":{"id":"06d48f6d-c8fc-47bf-bb31-484cf1b83ef1","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"82db7642-1ff1-41f5-bcd0-821c7f9d961e","exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Password updated successfully'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Password updated successfully\");\r","});\r","\r","pm.test(\"Response to have resetToken or JWT Token\", () => {\r","    pm.expect(body).to.have.ownProperty(\"resetToken\");\r","});\r","\r","pm.environment.set(\"old_password\", pm.environment.get(\"new_password\"));"],"type":"text/javascript","packages":{}}}],"id":"b3d980d6-3f99-4b3e-ab6d-77d3d604e5f2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"400: Missing Parameters","event":[{"listen":"test","script":{"id":"ff5269cd-8d5a-4685-a250-d870f8ffa35f","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Missing a parameter'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Missing a parameter\");\r","});"],"type":"text/javascript","packages":{}}},{"listen":"prerequest","script":{"id":"33736d8c-61b5-468f-a510-0884d1479d56","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\"));\r",""],"type":"text/javascript","packages":{}}}],"id":"46aa59b7-c71c-41fd-ab20-447a037c82ec","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"400: Password Mismatch","event":[{"listen":"prerequest","script":{"id":"bb7e82f1-6ac9-4de4-9ac7-f45129c4ff4a","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"940c5108-e804-45f8-9f9e-6d4174ea6e33","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Missing a parameter'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"The passwords do not match\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"5be88114-86c1-40ed-97bf-aae91d76fdd2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"wrong password!\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"400: Invalid NewPassword","event":[{"listen":"prerequest","script":{"id":"bb7e82f1-6ac9-4de4-9ac7-f45129c4ff4a","exec":["let invalidPassword =  pm.variables.replaceIn('{{$randomPassword}}');\r","pm.environment.set(\"new_password\", invalidPassword.substring(0,4));"],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"93bd39d1-440a-4e66-9150-b92e380b8ac3","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid new password  - please refer to documentation'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid new password  - please refer to documentation\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"1e101e7f-ca60-4815-b62b-0f76d904f2fe","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"400: Invalid OldPassword","event":[{"listen":"prerequest","script":{"id":"ecde12ce-6d44-4605-9a5b-0126edb3369b","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" +\"1\"));\r","pm.environment.set(\"old_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"fad371df-8198-40cd-80ed-31c534ff3bc0","exec":["pm.test(\"Response is error 400\", () => {\r","    pm.response.to.have.status(400);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Old Password is not correct for User'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Old Password is not correct for User\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"ad8b789b-9cad-4f93-bbf7-3e03849ceecd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\r\n    \"oldPassword\" : \"{{old_password}}\",\r\n    \"newPassword\" : \"{{new_password}}\",\r\n    \"confirmNewPassword\" : \"{{new_password}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"id":"06d48f6d-c8fc-47bf-bb31-484cf1b83ef1","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"82db7642-1ff1-41f5-bcd0-821c7f9d961e","exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"de47f3cd-757e-46eb-8671-9ef55667a479","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"PUT","header":[{"key":"0","value":"nope","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"id":"06d48f6d-c8fc-47bf-bb31-484cf1b83ef1","exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"82db7642-1ff1-41f5-bcd0-821c7f9d961e","exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{}}}],"id":"9bbfa7b3-a0f9-4a18-afc8-67c3cf51a50a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"],"query":[{"key":"","value":null,"disabled":true}]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"id":"b7bd6ba5-2108-4e6d-b7dd-560f3df7d55f","exec":["pm.environment.set(\"old_password_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\"));\r",""],"type":"text/javascript","packages":{}}},{"listen":"test","script":{"id":"edc71dd7-2557-44bd-8364-88b224ed3aec","exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{}}}],"id":"b53212e9-0d2b-483e-bb90-2ea50e17e1be","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]}],"id":"0708d0a2-a12a-4fe2-afc1-072ccd83b22b"},{"name":"closed/book","item":[{"name":"Auth","item":[{"name":"RegisterPreamble","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"46c4850d-067f-459f-b138-09fa603d8d19"}},{"listen":"prerequest","script":{"exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{},"id":"e17cf23a-2f12-485f-96cb-e08d8c1e36dd"}}],"id":"5871aa05-169b-4827-b582-b251522fd879","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"firstname\" : \"{{first_name}}\",\r\n    \"lastname\" : \"{{last_name}}\",\r\n    \"email\" : \"{{email}}\",\r\n    \"username\" : \"{{username}}\",\r\n    \"password\" : \"{{password}}\",\r\n    \"role\" : \"3\",\r\n    \"phone\" : \"{{phone_number}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/register","protocol":"http","host":["localhost"],"port":"4000","path":["register"]}},"response":[]},{"name":"LoginPreamble","event":[{"listen":"test","script":{"exec":["const body = pm.response.json();\r","pm.environment.set(\"User Token\", body.accessToken);"],"type":"text/javascript","packages":{},"id":"9dbee3b0-9c59-452d-90fd-93c3bce394fb"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"8a1f7a07-d1b5-4294-88ff-32e80ff1797f"}}],"id":"a75119f8-245e-485b-9a2a-1965ecdf9f23","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{password}}\"\r\n\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/login","protocol":"http","host":["localhost"],"port":"4000","path":["login"]}},"response":[]}],"id":"ce8e76df-947b-4c65-aa6a-b3c8a718c032"},{"name":"/all","item":[{"name":"200: Get All Books OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","// BOOK VALIDATION\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","// PAGINATION\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});\r","\r","pm.test(\"Response to have correct pagination.limit from query\", () => {\r","    const body = pm.response.json();\r","    const expectedValue = pm.request.url.query.get(\"limit\");\r","    pm.expect(body.pagination.limit).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have correct pagination.offset from query\", () => {\r","    const body = pm.response.json();\r","    const expectedValue = pm.request.url.query.get(\"offset\");\r","    pm.expect(body.pagination.offset).to.eql(+expectedValue);\r","\r","});\r","\r","pm.test(\"Response to have correct pagination.nextPage from query\", () => {\r","    const body = pm.response.json();\r","    const limit = pm.request.url.query.get(\"limit\");\r","    const offset = pm.request.url.query.get(\"offset\");\r","    const expectedValue = +limit + +offset;\r","    pm.expect(body.pagination.nextPage).to.eql(+expectedValue);\r","    \r","});\r",""],"type":"text/javascript","packages":{},"id":"1994724f-9c9a-48e6-9f31-ae67dc72e3b9"}},{"listen":"prerequest","script":{"exec":["function randomInt(min, max) {\r","    return Math.floor(Math.random() * (max - min + 1)) + min;\r","}\r","const limit = randomInt(0, 100);\r","const offset = randomInt(0, 9000);\r","pm.request.url.query.add(\"limit=\" + +limit);\r","pm.request.url.query.add(\"offset=\" + +offset);"],"type":"text/javascript","packages":{},"id":"955952dc-8600-4b5e-93aa-9eb7f5d08995"}}],"id":"f88340cc-9d20-4577-91ba-92ece292640c","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","description":"JWT Token from registering/login","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]},{"name":"200: Get All Books Invalid Input1","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});\r","\r","pm.test(\"Response to have default pagination.limit from invalid query\", () => {\r","    const body = pm.response.json();\r","    const limit = pm.request.url.query.get(\"limit\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationLimit\");\r","    pm.expect(+limit).to.be.lessThan(1);\r","    pm.expect(body.pagination.limit).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.offset from invalid query\", () => {\r","    const body = pm.response.json();\r","    const offset = pm.request.url.query.get(\"offset\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(+offset).to.be.lessThan(1);\r","    pm.expect(body.pagination.offset).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.nextPage from invalid query\", () => {\r","    const body = pm.response.json();\r","    const expectedLimit = pm.environment.get(\"DefaultPaginationLimit\");\r","    const expectedOffset = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(body.pagination.nextPage).to.eql(+expectedLimit + +expectedOffset); \r","});\r",""],"type":"text/javascript","packages":{},"id":"8588eb41-5a1c-48a4-bd02-daabcba37bc4"}},{"listen":"prerequest","script":{"exec":["function randomInt(min, max) {\r","    return Math.floor(Math.random() * (max - min + 1)) + min;\r","}\r","const limit = randomInt(0, 1000) * -1;\r","const offset = randomInt(0, 1000) * -1;\r","pm.request.url.query.add(\"limit=\" + +limit);\r","pm.request.url.query.add(\"offset=\" + +offset);"],"type":"text/javascript","packages":{},"id":"babdcfcf-fc5f-46de-912f-9922bc353d56"}}],"id":"61cda419-8f95-4590-b9c4-55c2b371a069","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","description":"JWT Token from registering/login","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]},{"name":"200: Get All Books Invalid Input2","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});\r","\r","pm.test(\"Response to have default pagination.limit from invalid query\", () => {\r","    const body = pm.response.json();\r","    const limit = pm.request.url.query.get(\"limit\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationLimit\");\r","    pm.expect(+limit).to.be.NaN;\r","    pm.expect(body.pagination.limit).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.offset from invalid query\", () => {\r","    const body = pm.response.json();\r","    const offset = pm.request.url.query.get(\"offset\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(+offset).to.be.NaN;\r","    pm.expect(body.pagination.offset).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.nextPage from invalid query\", () => {\r","    const body = pm.response.json();\r","    const expectedLimit = pm.environment.get(\"DefaultPaginationLimit\");\r","    const expectedOffset = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(body.pagination.nextPage).to.eql(+expectedLimit + +expectedOffset); \r","});\r",""],"type":"text/javascript","packages":{},"id":"3febd37f-7ae9-4f63-802f-95c08607adb9"}},{"listen":"prerequest","script":{"exec":["pm.request.url.query.add(\"limit=\" + \"I-shouldn't-work\");\r","pm.request.url.query.add(\"offset=\" + \"I-shouldn't-work\");"],"type":"text/javascript","packages":{},"id":"ef11e790-f055-4ae1-a7ae-b78f3fe95b23"}}],"id":"728a24c1-e076-4035-933c-182654295560","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","description":"JWT Token from registering/login","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"6d235d5d-827e-47aa-b9cf-8e3c87429c45"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"263484ad-edb8-4286-9b25-0e2a4f749dfe"}}],"id":"152d1d37-f0fb-4cea-8b6c-706394f248b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-bad","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/all","host":["localhost"],"port":"4000","path":["book","all"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"a825c9b0-9e35-46d4-88ea-2fcbd0d56a30"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"1701cbd3-88de-4f6a-b03c-dd81676c4811"}}],"id":"81cb8c81-3509-46d8-b8c5-86146dc5c8c7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/all","host":["localhost"],"port":"4000","path":["book","all"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    console.error(fields);\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});"],"type":"text/javascript","packages":{},"id":"df35f0cf-5929-4697-a924-4a51dbeb8a4a"}},{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"65964dc4-59b2-458c-a5c3-5aec68ddf3c5"}}],"id":"295517a1-7707-408a-be63-9554c11eacfa","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"","value":"","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all?limit=20&offset=10","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"],"query":[{"key":"limit","value":"20"},{"key":"offset","value":"10"}]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]}],"id":"131f0943-bcd6-415d-8d2f-14d9b42c6665"},{"name":"/:author","item":[{"name":"200: OK","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"49a909eb-6f7d-431a-a1a3-58fd10d09f13"}},{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"4bb9f7e6-3929-4c6a-8f6a-7f4acf765d4c"}}],"id":"8253420f-79c3-44c9-9a34-4a97b48e37b6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/author/Harper Lee","protocol":"http","host":["localhost"],"port":"4000","path":["book","author","Harper Lee"]}},"response":[]},{"name":"404: Name Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Author not Found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Author not Found\");","});"],"type":"text/javascript","packages":{},"id":"1ea7a33e-f71b-4f14-9e01-50a9b99a1a84"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"9d9d3c5d-c0ef-4e2a-afc0-1247d5457555"}}],"id":"de6dd5b8-173a-4679-888e-d11d861edc57","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/author/Spongebob Squarepants","protocol":"http","host":["localhost"],"port":"4000","path":["book","author","Spongebob Squarepants"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"42a35925-a8d4-4ef0-bd70-12c41775b96c"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"a1efce19-b48f-475b-b11a-22010400ebf6"}}],"id":"3d3f85dd-fbf1-4027-86e7-c7ec094cd1e8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/author/","host":["localhost"],"port":"4000","path":["book","author",""]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"83d53ede-accb-4093-9b6e-a521b48d8ee4"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"0dd77127-eff3-4d37-8670-d7be3836cc43"}}],"id":"b64b4de8-8d39-46cb-8a07-436dd3af4a5d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/author/","host":["localhost"],"port":"4000","path":["book","author",""]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"4f014730-4f37-4913-98b4-0f4baa68aaff"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"c4018827-53d7-4219-bdae-974c4d5bb53b"}}],"id":"fb52fb27-aa05-4173-a388-0f7a7358a172","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/author/","host":["localhost"],"port":"4000","path":["book","author",""]}},"response":[]}],"id":"3cab233d-63c9-44fb-8cc2-741990f132cb"},{"name":"/:year","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"f051a975-7bbd-46a9-8388-6bdcb41fab93"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"85310d35-0bbc-476d-a66b-dee7ae4614ba"}}],"id":"143d3d82-6f32-491a-931f-4192c26e9b92","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/year/2012","protocol":"http","host":["localhost"],"port":"4000","path":["book","year","2012"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'No Books with the publication year given was found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"No Books with the publication year given was found\");","});"],"type":"text/javascript","packages":{},"id":"aaa89cb2-a332-49d6-9e85-d33637eef350"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"d4ae8e13-2c6e-417d-8cd0-a29d05e4b827"}}],"id":"de32d08e-a566-45d2-97fb-91bb172c3768","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/year/1001","protocol":"http","host":["localhost"],"port":"4000","path":["book","year","1001"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"8af1ea1f-c9fe-40cc-a395-bda817f92669"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"dd2ad6b7-352c-453a-983d-27d699d32e7b"}}],"id":"bdd400ce-28d5-4ca5-85c7-cf472dfb34e6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/year/","host":["localhost"],"port":"4000","path":["book","year",""]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"bb0a3f1a-5ab4-48fa-b2e2-2eda5aa0cccf"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"17678450-1f2f-4ad3-98cd-706962d64ffe"}}],"id":"aa817b4d-1833-4d66-9717-0deadb620024","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/year/","host":["localhost"],"port":"4000","path":["book","year",""]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"468400cd-591c-4200-9c49-08cad3b117db"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"29ba70cf-04ed-4d82-9e86-8c096010aa1c"}}],"id":"814b4b60-a71d-4079-8315-088a4e2c5583","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/year/","host":["localhost"],"port":"4000","path":["book","year",""]}},"response":[]}],"id":"a27783ac-d417-47e8-9314-393d3287154f"},{"name":"/:isbn","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"c944a2a1-087d-444f-9f61-4c8805f0caf4"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"d03d779b-1885-4c9d-b906-0af39ad8009a"}}],"id":"f505bcc5-0720-447a-9aea-dce6e54b490b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/9780061120080","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780061120080"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'ISBN not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"ISBN not found\");","});"],"type":"text/javascript","packages":{},"id":"17be6513-4ad6-4ed7-9ecd-e87c498ade53"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"307ea045-889c-4c35-92f6-6ca1161c1c4b"}}],"id":"986da448-88ee-4d70-8fa8-80aefdcaaa0a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/9999999999999","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9999999999999"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"8ac8d419-cd81-4938-927e-8764f12467bb"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"31b13680-236f-4b07-9861-cae5743ddfd7"}}],"id":"bb93df5d-1f90-4b91-9f01-b536f12434dd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/isbn","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"16322560-cc99-4618-bc29-85eb5d0991a6"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"2ff2c0be-a908-46b0-802c-266cb556f0c7"}}],"id":"a3933a5f-ecf1-4e7c-9122-2bf3c3eceb91","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/isbn/9780061120080","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780061120080"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"ba962b89-cdca-4abb-bf01-99a970e70916"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"a29d36a1-e1fc-4cf1-9f18-cec7d3f5890c"}}],"id":"baba1207-ab2b-4f90-812b-bbbb24a082e4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/isbn/","host":["localhost"],"port":"4000","path":["book","isbn",""]}},"response":[]}],"id":"30dd5874-04c4-4c5a-be0f-a173035c2fd5"},{"name":"/:rating","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"61cf0f18-859f-42da-b519-bdf259b6887e"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"663c7eb5-4d3c-45f9-8b70-0eef483792d8"}}],"id":"cc4d7347-96f0-4848-a1ef-61d8fd7ed6a8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/rating/3","protocol":"http","host":["localhost"],"port":"4000","path":["book","rating","3"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Books with given rating not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Books with given rating not found\");","});"],"type":"text/javascript","packages":{},"id":"7f82f2b3-12c3-41b5-8d60-0302b200daad"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"61469776-bc62-4973-9fd6-081fd368afe7"}}],"id":"896195ba-8ae7-4816-87d8-c0764532b903","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/rating/1","protocol":"http","host":["localhost"],"port":"4000","path":["book","rating","1"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"0d1d4880-b758-45c7-8e6f-56e3cb7ee47b"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"6684538e-8048-41dd-b344-60c06d0d6f55"}}],"id":"e0a7da2f-a3b2-443b-993b-b7d065a2f34b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"da451bee-618a-4cfa-87e4-9ac11199b74e"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"4b207c90-0eb8-4d9c-b7fd-dffd9ed5006d"}}],"id":"474410ca-400d-4440-95bb-05baff49756d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"700b4a55-4b30-4270-9d06-5479728f5bbc"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"3221b964-01f1-448f-a0ef-00a76883dad8"}}],"id":"9a087a28-fd1b-4768-ab8e-aa845301c363","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/rating/","host":["localhost"],"port":"4000","path":["book","rating",""]}},"response":[]}],"id":"c72f6300-533c-4a81-a7ae-6fa3dcb8e756"},{"name":"/:title","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"c2823b19-1a26-40b9-9acb-1d734f429e17"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"bab78b88-6532-47b4-a802-98287be6a2f8"}}],"id":"53252cb6-54e1-4c31-a958-cc307e6f4444","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/title/hunger","protocol":"http","host":["localhost"],"port":"4000","path":["book","title","hunger"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Title not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Title not found\");","});"],"type":"text/javascript","packages":{},"id":"d4b5cc09-c29b-4a46-ab05-b682bb0da4be"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"00b564b7-18c9-433b-a492-e10191c8d530"}}],"id":"cbfd81ee-c180-429d-aeec-03dc47d3d6bd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/title/something so absurd that it isn't real","protocol":"http","host":["localhost"],"port":"4000","path":["book","title","something so absurd that it isn't real"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"b3b88847-ff70-4a4b-99d5-478c4046a79d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"dfdd220e-357c-4dfd-ad60-eb755f59b077"}}],"id":"4be4eb4a-4272-480c-9c22-9d53142ae192","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"fb03e049-f4f0-4f01-9c0e-36b5f5291199"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"eb168479-0a69-4391-946b-179789d13242"}}],"id":"30afe641-16e8-4190-b0e0-63ad2b3561f8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"bde2f159-9c4d-4fa0-b458-58bab0c2a34d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"9a9de9db-7578-4a17-9f06-bdabdb0c396c"}}],"id":"4380e6c3-1a66-4416-b88b-efe2b0af3d36","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/title/","host":["localhost"],"port":"4000","path":["book","title",""]}},"response":[]}],"id":"ef09ee98-a88c-4f9b-92c5-b4948acae11d"},{"name":"/ (posting a new book)","item":[{"name":"201: Created","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 201\", function () {","    pm.response.to.have.status(201);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Book added successfully\", function () {","    const responseJson = pm.response.json();","    pm.expect(responseJson.message).to.eql(\"Book added successfully\");","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","        body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","    ","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"832fd302-da68-47ad-b771-1befc0391cc3"}},{"listen":"prerequest","script":{"exec":["// Book title with length > 3","let title = `${pm.variables.replaceIn(\"{{$randomWord}}\")} of ${pm.variables.replaceIn(\"{{$randomWord}}\")}`;","pm.environment.set(\"title\", title);","","// Published date between 1000 and the current year","let date = Math.floor(Math.random() * (new Date().getFullYear() - 1000 + 1)) + 1000;","pm.environment.set(\"date\", date);","","// ISBN-13: starts with 978 and adds a random 10-digit number","let isbn = \"978\" + Math.floor(1000000000 + Math.random() * 9000000000);","pm.environment.set(\"isbn\", isbn);","","// Author name using Postman's built-in random name variables","let author = `${pm.variables.replaceIn(\"{{$randomFirstName}}\")} ${pm.variables.replaceIn(\"{{$randomLastName}}\")}`;","pm.environment.set(\"author\", author);"],"type":"text/javascript","packages":{},"id":"c8a7f200-4e61-4c5a-bcdb-eec012e3b22e"}}],"id":"8e6320eb-9ef3-4d36-b567-ee0a7949c22a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"title\": \"{{title}}\",\n    \"author\": \"{{author}}\",\n    \"isbn\": \"{{isbn}}\",\n    \"date\": \"{{date}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/","protocol":"http","host":["localhost"],"port":"4000","path":["book",""]}},"response":[]},{"name":"400: Bad Request/Miss Parameters","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Title is required and should be at least 3 characters'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Title is required and should be at least 3 characters\");","});"],"type":"text/javascript","packages":{},"id":"894334f3-4c4d-482d-aa1e-8705c0fe3a94"}},{"listen":"prerequest","script":{"exec":["// Book title with length > 3","let title = `${pm.variables.replaceIn(\"{{$randomWord}}\")} of ${pm.variables.replaceIn(\"{{$randomWord}}\")}`;","pm.environment.set(\"title\", title);","","// Published date between 1000 and the current year","let date = Math.floor(Math.random() * (new Date().getFullYear() - 1000 + 1)) + 1000;","pm.environment.set(\"date\", date);","","// ISBN-13: starts with 978 and adds a random 10-digit number","let isbn = \"978\" + Math.floor(1000000000 + Math.random() * 9000000000);","pm.environment.set(\"isbn\", isbn);","","// Author name using Postman's built-in random name variables","let author = `${pm.variables.replaceIn(\"{{$randomFirstName}}\")} ${pm.variables.replaceIn(\"{{$randomLastName}}\")}`;","pm.environment.set(\"author\", author);"],"type":"text/javascript","packages":{},"id":"fb1c4b24-3268-44e8-9ab1-74892634b7ef"}}],"id":"95ced3da-1a7f-415c-b127-6008846d9ca7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"title\": \"\",\n    \"author\": \"{{author}}\",\n    \"isbn\": \"{{isbn}}\",\n    \"date\": \"{{date}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/","protocol":"http","host":["localhost"],"port":"4000","path":["book",""]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"4a905062-19d6-4a36-8d83-829b8ad7bd54"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"1fff7465-ab5f-4fe0-acc9-948c9d1227fa"}}],"id":"1347987a-532d-4fc8-a270-8f1eebac58d6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"64fe7ca7-1729-436b-aa4d-81c42e80a9f9"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"8dd6541c-1452-4195-8251-db71b0ed36f3"}}],"id":"b0a6b203-dae7-4447-92a5-7c09f534be4e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"5f735f23-02de-4e28-a5ed-3ef2eedc623b"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"2143b759-4b7c-42b3-994b-0c11cb92a35c"}}],"id":"66cc3f2e-078e-4f7e-a33b-c8ba5f651c95","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/","host":["localhost"],"port":"4000","path":["book",""]}},"response":[]}],"id":"aff540fa-74e3-4e20-afb5-ac1b410e7c94"},{"name":"/rate/:rating","item":[{"name":"200: Updated","event":[{"listen":"prerequest","script":{"exec":["// Generate random numbers between 0 and 10000 for each rating","pm.environment.set(\"one\", Math.floor(Math.random() * 10001));  // 1-star rating","pm.environment.set(\"two\", Math.floor(Math.random() * 10001));  // 2-star rating","pm.environment.set(\"three\", Math.floor(Math.random() * 10001));  // 3-star rating","pm.environment.set(\"four\", Math.floor(Math.random() * 10001));  // 4-star rating","pm.environment.set(\"five\", Math.floor(Math.random() * 10001));  // 5-star rating",""],"type":"text/javascript","packages":{},"id":"e8abe319-8819-401d-9d50-73171d4d5029"}},{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});","",""],"type":"text/javascript","packages":{},"id":"bd5202b5-da8a-4dd1-952b-8bef92d297cd"}}],"id":"4b1c7e08-3d17-4ffb-bb30-56c4375e0ba0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"rating_1_star\": \"{{one}}\",\n    \"rating_2_star\": \"{{two}}\",\n    \"rating_3_star\": \"{{three}}\",\n    \"rating_4_star\": \"{{four}}\",\n    \"rating_5_star\": \"{{five}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/rate/4","protocol":"http","host":["localhost"],"port":"4000","path":["book","rate","4"]}},"response":[]},{"name":"400: Bad Requets","event":[{"listen":"prerequest","script":{"exec":["// Generate random numbers between 0 and 10000 for each rating","pm.environment.set(\"one\", Math.floor(Math.random() * 10001));  // 1-star rating","pm.environment.set(\"two\", Math.floor(Math.random() * 10001));  // 2-star rating","pm.environment.set(\"three\", Math.floor(Math.random() * 10001));  // 3-star rating","pm.environment.set(\"four\", Math.floor(Math.random() * 10001));  // 4-star rating","pm.environment.set(\"five\", Math.floor(Math.random() * 10001));  // 5-star rating",""],"type":"text/javascript","packages":{},"id":"f278d3b5-d836-4327-b052-5cfcc6a0f56a"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'No valid rating fields provided for update'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"No valid rating fields provided for update\");","});"],"type":"text/javascript","packages":{},"id":"1fd93a77-1fa2-4c7c-826a-461961ec9993"}}],"id":"68ea33b6-4398-403e-9999-b19aa2dd1dde","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/rate/3","protocol":"http","host":["localhost"],"port":"4000","path":["book","rate","3"]}},"response":[]},{"name":"404: Not Found","event":[{"listen":"prerequest","script":{"exec":["// Generate random numbers between 0 and 10000 for each rating","pm.environment.set(\"one\", Math.floor(Math.random() * 10001));  // 1-star rating","pm.environment.set(\"two\", Math.floor(Math.random() * 10001));  // 2-star rating","pm.environment.set(\"three\", Math.floor(Math.random() * 10001));  // 3-star rating","pm.environment.set(\"four\", Math.floor(Math.random() * 10001));  // 4-star rating","pm.environment.set(\"five\", Math.floor(Math.random() * 10001));  // 5-star rating",""],"type":"text/javascript","packages":{},"id":"8285e277-70f1-4fb7-8022-ae02b49c290e"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Book not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Book not found\");","});"],"type":"text/javascript","packages":{},"id":"a6b6767e-a3a3-45c1-a387-91e2c688252c"}}],"id":"e29667b7-34e5-46f0-84e1-b0368d68963e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"rating_1_star\": \"{{one}}\",\n    \"rating_2_star\": \"{{two}}\",\n    \"rating_3_star\": \"{{three}}\",\n    \"rating_4_star\": \"{{four}}\",\n    \"rating_5_star\": \"{{five}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/rate/1000000","protocol":"http","host":["localhost"],"port":"4000","path":["book","rate","1000000"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"adac783c-9a18-4189-b5ef-def295f64fe4"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"4ec1ff7b-4ddb-4e43-83d4-7ebbb45880ec"}}],"id":"e6590453-ca04-4f20-88cb-1ef7592aefc9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"PUT","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"87b83a2f-954c-41e8-90e8-11948b79d2ac"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"cc8ff4bb-40bc-49a5-b1f8-cabfcd7f1458"}}],"id":"0b5b0fad-2ca5-413b-b542-3a127851c547","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"e9c0840a-8fea-4abc-8cab-76d3c11cd7a5"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"07f2e3e2-64d7-4991-8a5d-f82976e5b62f"}}],"id":"a5783a0f-d820-42bb-8027-d4547c1ae10b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/rate/","host":["localhost"],"port":"4000","path":["book","rate",""]}},"response":[]}],"id":"22398de2-147f-44f6-bffd-694e31e775cf"},{"name":"/del/:isbn","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});"],"type":"text/javascript","packages":{},"id":"1422012b-76f0-424b-856e-0219aee025a8"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"875e01e4-04b6-47f0-b2cc-abd590a0675c"}}],"id":"0c106b28-9cb4-451b-afcf-cef2865f8ba2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/isbn/9780062001030","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780062001030"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"0bd9a14a-3c78-421b-8d33-433c3070164d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"8d931fc9-7a66-498d-b586-0a0ac68a313e"}}],"id":"6e223499-ff4c-441a-80a0-0e539d45589e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"DELETE","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"b3145524-22a1-4e44-ad25-aba1d7ca3f2d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"8d502089-22c2-40ee-bb96-ffdaa7718cab"}}],"id":"a1309ea9-19af-4899-bfb4-3fe4ad60d69a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"400: Bad Request","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'ISBN must be a 13-digit number'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"ISBN must be a 13-digit number\");","});"],"type":"text/javascript","packages":{},"id":"a4938d07-8687-40b4-a525-f195ff395470"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"bc3d7cf4-f2d1-4232-8abd-333bcbe1ed89"}}],"id":"610f6211-4c9f-45c5-a289-8c063a614677","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/0","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","0"]}},"response":[]},{"name":"404: Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Book not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Book not found\");","});"],"type":"text/javascript","packages":{},"id":"b92877c6-8658-4ae9-91d4-21685ac8e2a5"}},{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"14247556-2966-462e-b1fc-1545beeb5e58"}}],"id":"e1bf518c-5ad2-4d77-a3a8-2c58b2f8c21b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/9780439023480","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780439023480"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"1bda1bf6-2823-48b2-b317-778fa60043c3"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"ebd166d0-f83b-4daa-b5cd-059ca31b18ef"}}],"id":"6ddc878b-e095-46c1-a29b-23ed7ca1cc23","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/isbn/","host":["localhost"],"port":"4000","path":["book","isbn",""]}},"response":[]}],"id":"9fbcd387-b162-4471-b2e9-9461e9be0796"},{"name":"/del/:seriesName","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});"],"type":"text/javascript","packages":{},"id":"db3f65ca-56cc-46a0-b6f1-a8eaec39f178"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"d2a27af8-eda4-45d1-a074-d1a979a5bf85"}}],"id":"7ba5ea32-9f8f-460a-8fbf-546c1efaf0da","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/series/Twilight","protocol":"http","host":["localhost"],"port":"4000","path":["book","series","Twilight"]}},"response":[]},{"name":"400: Bad Request","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Series name is required'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Series name is required\");","});"],"type":"text/javascript","packages":{},"id":"71a2cfa1-f2a6-472a-8219-cff57a516f64"}},{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"0ae9f0a4-8930-464c-87c3-b11d911a5d10"}}],"id":"ce8cc80f-8fc1-48fe-80fa-f8b480ba71dd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/series/","protocol":"http","host":["localhost"],"port":"4000","path":["book","series",""]}},"response":[]},{"name":"404: Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'No books found with the specified series name or title'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"No books found with the specified series name or title\");","});"],"type":"text/javascript","packages":{},"id":"b684c596-d95d-44c3-a20f-7e24405c2ed8"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"45703ecb-c3fd-4a72-b526-4ded1da8f973"}}],"id":"ebbbefc8-72d1-477c-83f0-686ec9e9c9bf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/series/1230","protocol":"http","host":["localhost"],"port":"4000","path":["book","series","1230"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"a970fac8-357f-47b0-85de-93df230bdaa5"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"a118e4b9-8791-4490-9f18-5eff10e589df"}}],"id":"5a5e23e5-f44b-4a7f-8e06-f4914c841ab2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"DELETE","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"ffd485e7-74a7-4dfa-95cc-7fcbe347c66b"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"9b9ccc82-1d0a-4aaf-b305-a582534f88e3"}}],"id":"a993ac05-8868-462f-bec4-bcf1114b3bb8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"12678d1d-5951-4cff-a17c-e1b2713bc004"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"87452a16-f574-40bd-8bdf-397bb1592012"}}],"id":"24196fc7-8ef1-432e-abe4-0ecfbec5fd0e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/series/","host":["localhost"],"port":"4000","path":["book","series",""]}},"response":[]}],"id":"0ee669a7-0329-4040-8034-14ab532c1017"}],"id":"92a0bd1a-f136-4938-8354-7d65381350fc"}],"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"3ca2cd35-0af9-40ee-9f69-1990976266eb","type":"text/javascript","packages":{},"exec":[""]}},{"listen":"test","script":{"id":"fa5d64f5-28c7-4e04-a84a-044bf2daeb2e","type":"text/javascript","packages":{},"exec":[""]}}]}