{"info":{"_postman_id":"e92e8487-99f6-414a-8906-1ca59fa36c54","name":"closed/book","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Auth","item":[{"name":"RegisterPreamble","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"46c4850d-067f-459f-b138-09fa603d8d19"}},{"listen":"prerequest","script":{"exec":["pm.environment.set(\"first_name\", pm.variables.replaceIn('{{$randomFirstName}}'));\r","pm.environment.set(\"last_name\", pm.variables.replaceIn('{{$randomLastName}}'));\r","pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));\r","pm.environment.set(\"username\", pm.variables.replaceIn('{{$randomUserName}}'));\r","pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\"));\r","pm.environment.set(\"phone_number\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"],"type":"text/javascript","packages":{},"id":"e17cf23a-2f12-485f-96cb-e08d8c1e36dd"}}],"id":"e669498c-6a34-4ece-a263-ce382350ca9e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"firstname\" : \"{{first_name}}\",\r\n    \"lastname\" : \"{{last_name}}\",\r\n    \"email\" : \"{{email}}\",\r\n    \"username\" : \"{{username}}\",\r\n    \"password\" : \"{{password}}\",\r\n    \"role\" : \"3\",\r\n    \"phone\" : \"{{phone_number}}\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/register","protocol":"http","host":["localhost"],"port":"4000","path":["register"]}},"response":[]},{"name":"LoginPreamble","event":[{"listen":"test","script":{"exec":["const body = pm.response.json();\r","pm.environment.set(\"User Token\", body.accessToken);"],"type":"text/javascript","packages":{},"id":"9dbee3b0-9c59-452d-90fd-93c3bce394fb"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"8a1f7a07-d1b5-4294-88ff-32e80ff1797f"}}],"id":"31914998-58e3-497c-bebe-4e709b384380","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"{{password}}\"\r\n\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/login","protocol":"http","host":["localhost"],"port":"4000","path":["login"]}},"response":[]}],"id":"cd1d0a95-ce19-4651-9712-3ca9037888a8"},{"name":"/all","item":[{"name":"200: Get All Books OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","// BOOK VALIDATION\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","// PAGINATION\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});\r","\r","pm.test(\"Response to have correct pagination.limit from query\", () => {\r","    const body = pm.response.json();\r","    const expectedValue = pm.request.url.query.get(\"limit\");\r","    pm.expect(body.pagination.limit).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have correct pagination.offset from query\", () => {\r","    const body = pm.response.json();\r","    const expectedValue = pm.request.url.query.get(\"offset\");\r","    pm.expect(body.pagination.offset).to.eql(+expectedValue);\r","\r","});\r","\r","pm.test(\"Response to have correct pagination.nextPage from query\", () => {\r","    const body = pm.response.json();\r","    const limit = pm.request.url.query.get(\"limit\");\r","    const offset = pm.request.url.query.get(\"offset\");\r","    const expectedValue = +limit + +offset;\r","    pm.expect(body.pagination.nextPage).to.eql(+expectedValue);\r","    \r","});\r",""],"type":"text/javascript","packages":{},"id":"1994724f-9c9a-48e6-9f31-ae67dc72e3b9"}},{"listen":"prerequest","script":{"exec":["function randomInt(min, max) {\r","    return Math.floor(Math.random() * (max - min + 1)) + min;\r","}\r","const limit = randomInt(0, 100);\r","const offset = randomInt(0, 9000);\r","pm.request.url.query.add(\"limit=\" + +limit);\r","pm.request.url.query.add(\"offset=\" + +offset);"],"type":"text/javascript","packages":{},"id":"955952dc-8600-4b5e-93aa-9eb7f5d08995"}}],"id":"fb5703f4-78e2-4481-920a-ea0cd2a9d343","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","description":"JWT Token from registering/login","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]},{"name":"200: Get All Books Invalid Input1","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});\r","\r","pm.test(\"Response to have default pagination.limit from invalid query\", () => {\r","    const body = pm.response.json();\r","    const limit = pm.request.url.query.get(\"limit\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationLimit\");\r","    pm.expect(+limit).to.be.lessThan(1);\r","    pm.expect(body.pagination.limit).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.offset from invalid query\", () => {\r","    const body = pm.response.json();\r","    const offset = pm.request.url.query.get(\"offset\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(+offset).to.be.lessThan(1);\r","    pm.expect(body.pagination.offset).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.nextPage from invalid query\", () => {\r","    const body = pm.response.json();\r","    const expectedLimit = pm.environment.get(\"DefaultPaginationLimit\");\r","    const expectedOffset = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(body.pagination.nextPage).to.eql(+expectedLimit + +expectedOffset); \r","});\r",""],"type":"text/javascript","packages":{},"id":"8588eb41-5a1c-48a4-bd02-daabcba37bc4"}},{"listen":"prerequest","script":{"exec":["function randomInt(min, max) {\r","    return Math.floor(Math.random() * (max - min + 1)) + min;\r","}\r","const limit = randomInt(0, 1000) * -1;\r","const offset = randomInt(0, 1000) * -1;\r","pm.request.url.query.add(\"limit=\" + +limit);\r","pm.request.url.query.add(\"offset=\" + +offset);"],"type":"text/javascript","packages":{},"id":"babdcfcf-fc5f-46de-912f-9922bc353d56"}}],"id":"2bf8a36d-0f72-4309-a649-c11518012a68","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","description":"JWT Token from registering/login","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]},{"name":"200: Get All Books Invalid Input2","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});\r","\r","pm.test(\"Response to have default pagination.limit from invalid query\", () => {\r","    const body = pm.response.json();\r","    const limit = pm.request.url.query.get(\"limit\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationLimit\");\r","    pm.expect(+limit).to.be.NaN;\r","    pm.expect(body.pagination.limit).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.offset from invalid query\", () => {\r","    const body = pm.response.json();\r","    const offset = pm.request.url.query.get(\"offset\");\r","    const expectedValue = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(+offset).to.be.NaN;\r","    pm.expect(body.pagination.offset).to.eql(+expectedValue);\r","});\r","\r","pm.test(\"Response to have default pagination.nextPage from invalid query\", () => {\r","    const body = pm.response.json();\r","    const expectedLimit = pm.environment.get(\"DefaultPaginationLimit\");\r","    const expectedOffset = pm.environment.get(\"DefaultPaginationOffset\");\r","    pm.expect(body.pagination.nextPage).to.eql(+expectedLimit + +expectedOffset); \r","});\r",""],"type":"text/javascript","packages":{},"id":"3febd37f-7ae9-4f63-802f-95c08607adb9"}},{"listen":"prerequest","script":{"exec":["pm.request.url.query.add(\"limit=\" + \"I-shouldn't-work\");\r","pm.request.url.query.add(\"offset=\" + \"I-shouldn't-work\");"],"type":"text/javascript","packages":{},"id":"ef11e790-f055-4ae1-a7ae-b78f3fe95b23"}}],"id":"f9b44dea-f451-4e04-acb1-9c48259adca6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","description":"JWT Token from registering/login","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"6d235d5d-827e-47aa-b9cf-8e3c87429c45"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"263484ad-edb8-4286-9b25-0e2a4f749dfe"}}],"id":"6af20ce8-8962-421f-9b6b-ca1f36abc7c4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-bad","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/all","host":["localhost"],"port":"4000","path":["book","all"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"a825c9b0-9e35-46d4-88ea-2fcbd0d56a30"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"1701cbd3-88de-4f6a-b03c-dd81676c4811"}}],"id":"683f7eee-d5ff-455b-ab8d-6c14157f5c70","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/all","host":["localhost"],"port":"4000","path":["book","all"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","pm.test(\"Response has multiple entries\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    console.error(fields);\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid pagination meta data object\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","});\r","\r","pm.test(\"Response to have valid pagination elements totalRecords, limit, offset, nextPage\", () => {\r","    const body = pm.response.json();\r","    pm.expect(body).to.have.ownProperty(\"pagination\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"totalRecords\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"limit\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"offset\");\r","    pm.expect(body.pagination).to.have.ownProperty(\"nextPage\");\r","});"],"type":"text/javascript","packages":{},"id":"df35f0cf-5929-4697-a924-4a51dbeb8a4a"}},{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"65964dc4-59b2-458c-a5c3-5aec68ddf3c5"}}],"id":"9009582f-bb09-4a7a-9fe2-78afc3fd25d0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"","value":"","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/all?limit=20&offset=10","protocol":"http","host":["localhost"],"port":"4000","path":["book","all"],"query":[{"key":"limit","value":"20"},{"key":"offset","value":"10"}]},"description":"This endpoint makes an HTTP GET request to retrieve a list of books with pagination. The request URL is `http://localhost:4000/book/all`, with query parameters `limit` set to 20 and `offset` set to 10.\n\n### Request Parameters\n\n- `limit` (query parameter): Specifies the maximum number of records to retrieve.\n    \n- `offset` (query parameter): Specifies the number of records to skip before starting to return records.\n    \n\n### Response\n\nThe response will have a status code of 200 and a content type of `application/json`. The response body will contain an array of `entries`, each representing a book with the following fields:\n\n- `id` (number): The unique identifier of the book.\n    \n- `IBook` (object): An object containing information about the book including:\n    \n    - `isbn13` (string): The ISBN-13 code of the book.\n        \n    - `authors` (string): The author(s) of the book.\n        \n    - `publication` (number): The publication date of the book.\n        \n    - `original_title` (string): The original title of the book.\n        \n    - `title` (string): The title of the book.\n        \n    - `ratings` (object): An object containing information about the ratings of the book including:\n        \n        - `average` (number): The average rating of the book.\n            \n        - `count` (number): The total count of ratings.\n            \n        - `rating_1` (number): The count of 1-star ratings.\n            \n        - `rating_2` (number): The count of 2-star ratings.\n            \n        - `rating_3` (number): The count of 3-star ratings.\n            \n        - `rating_4` (number): The count of 4-star ratings.\n            \n        - `rating_5` (number): The count of 5-star ratings.\n            \n    - `icons` (object): An object containing URLs for the book's icons including:\n        \n        - `large` (string): The URL for the large icon.\n            \n        - `small` (string): The URL for the small icon.\n            \n\nThe response also includes a `pagination` object with the following fields:\n\n- `totalRecords` (string): The total number of records available.\n    \n- `limit` (number): The limit used for pagination.\n    \n- `offset` (number): The offset used for pagination.\n    \n- `nextPage` (number): The page number for the next set of records."},"response":[]}],"id":"1e75e8a0-bd8c-454b-aab9-8f2adf2b7b89"},{"name":"/:author","item":[{"name":"200: OK","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"49a909eb-6f7d-431a-a1a3-58fd10d09f13"}},{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"4bb9f7e6-3929-4c6a-8f6a-7f4acf765d4c"}}],"id":"e09f2733-49ac-42df-9239-a36ff3a52546","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/author/Harper Lee","protocol":"http","host":["localhost"],"port":"4000","path":["book","author","Harper Lee"]}},"response":[]},{"name":"404: Name Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Author not Found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Author not Found\");","});"],"type":"text/javascript","packages":{},"id":"1ea7a33e-f71b-4f14-9e01-50a9b99a1a84"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"9d9d3c5d-c0ef-4e2a-afc0-1247d5457555"}}],"id":"22d527de-6230-4dad-b3b8-92b8db22bcd0","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/author/Spongebob Squarepants","protocol":"http","host":["localhost"],"port":"4000","path":["book","author","Spongebob Squarepants"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"42a35925-a8d4-4ef0-bd70-12c41775b96c"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"a1efce19-b48f-475b-b11a-22010400ebf6"}}],"id":"0b9143b7-7537-426c-8505-0277ed86c7ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/author/","host":["localhost"],"port":"4000","path":["book","author",""]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"83d53ede-accb-4093-9b6e-a521b48d8ee4"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"0dd77127-eff3-4d37-8670-d7be3836cc43"}}],"id":"47cf7892-4c9b-4a58-b610-e5084ca1a00b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/author/","host":["localhost"],"port":"4000","path":["book","author",""]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"4f014730-4f37-4913-98b4-0f4baa68aaff"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"c4018827-53d7-4219-bdae-974c4d5bb53b"}}],"id":"df6a89e2-af43-4acd-9a54-53ac069a60cf","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/author/","host":["localhost"],"port":"4000","path":["book","author",""]}},"response":[]}],"id":"bef55542-8094-41b7-85b7-69e26bbdbbe9"},{"name":"/:year","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"f051a975-7bbd-46a9-8388-6bdcb41fab93"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"85310d35-0bbc-476d-a66b-dee7ae4614ba"}}],"id":"bd647c68-5f99-4897-ae8a-2b2bb65d9d12","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/year/2012","protocol":"http","host":["localhost"],"port":"4000","path":["book","year","2012"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'No Books with the publication year given was found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"No Books with the publication year given was found\");","});"],"type":"text/javascript","packages":{},"id":"aaa89cb2-a332-49d6-9e85-d33637eef350"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"d4ae8e13-2c6e-417d-8cd0-a29d05e4b827"}}],"id":"74a08b43-1017-4c37-a807-b8ceadbbf399","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/year/1001","protocol":"http","host":["localhost"],"port":"4000","path":["book","year","1001"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"8af1ea1f-c9fe-40cc-a395-bda817f92669"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"dd2ad6b7-352c-453a-983d-27d699d32e7b"}}],"id":"45cb7d1e-cb63-4829-89e5-dc3e97c0af37","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/year/","host":["localhost"],"port":"4000","path":["book","year",""]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"bb0a3f1a-5ab4-48fa-b2e2-2eda5aa0cccf"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"17678450-1f2f-4ad3-98cd-706962d64ffe"}}],"id":"2719cf0a-7610-4d61-af19-0ac15dd8cd26","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/year/","host":["localhost"],"port":"4000","path":["book","year",""]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"468400cd-591c-4200-9c49-08cad3b117db"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"29ba70cf-04ed-4d82-9e86-8c096010aa1c"}}],"id":"0de5b411-43dd-46a4-8d7a-5095216bf34a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/year/","host":["localhost"],"port":"4000","path":["book","year",""]}},"response":[]}],"id":"583b4c73-183a-41ad-90dd-aead3af6b2a5"},{"name":"/:isbn","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"c944a2a1-087d-444f-9f61-4c8805f0caf4"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"d03d779b-1885-4c9d-b906-0af39ad8009a"}}],"id":"702cbd1a-9948-4ce9-84cd-12db43853508","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/9780061120080","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780061120080"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'ISBN not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"ISBN not found\");","});"],"type":"text/javascript","packages":{},"id":"17be6513-4ad6-4ed7-9ecd-e87c498ade53"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"307ea045-889c-4c35-92f6-6ca1161c1c4b"}}],"id":"7a89a66b-bed5-4315-ba31-14b49968db69","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/9999999999999","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9999999999999"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"8ac8d419-cd81-4938-927e-8764f12467bb"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"31b13680-236f-4b07-9861-cae5743ddfd7"}}],"id":"a1bc2fa4-0548-41a3-aae0-9d5387539585","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/isbn","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"16322560-cc99-4618-bc29-85eb5d0991a6"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"2ff2c0be-a908-46b0-802c-266cb556f0c7"}}],"id":"42b6eb5e-78d7-4293-ae6b-4d3980bb3b61","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/isbn/9780061120080","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780061120080"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"ba962b89-cdca-4abb-bf01-99a970e70916"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"a29d36a1-e1fc-4cf1-9f18-cec7d3f5890c"}}],"id":"1e3b6940-6596-428b-9d6f-6bde820f23be","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/isbn/","host":["localhost"],"port":"4000","path":["book","isbn",""]}},"response":[]}],"id":"d6b45cab-faf5-41fe-9113-66e81916c7bf"},{"name":"/:rating","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"61cf0f18-859f-42da-b519-bdf259b6887e"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"663c7eb5-4d3c-45f9-8b70-0eef483792d8"}}],"id":"2f8b5497-a22a-43bb-aac2-eff95d8e88fa","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/rating/3","protocol":"http","host":["localhost"],"port":"4000","path":["book","rating","3"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Books with given rating not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Books with given rating not found\");","});"],"type":"text/javascript","packages":{},"id":"7f82f2b3-12c3-41b5-8d60-0302b200daad"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"61469776-bc62-4973-9fd6-081fd368afe7"}}],"id":"8f1112a6-3890-4335-8c82-97b2dbf349db","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/rating/1","protocol":"http","host":["localhost"],"port":"4000","path":["book","rating","1"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"0d1d4880-b758-45c7-8e6f-56e3cb7ee47b"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"6684538e-8048-41dd-b344-60c06d0d6f55"}}],"id":"af3313b6-685c-4cef-981f-48dec4f30868","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"da451bee-618a-4cfa-87e4-9ac11199b74e"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"4b207c90-0eb8-4d9c-b7fd-dffd9ed5006d"}}],"id":"8dd53d32-0146-4871-9aeb-9d42808f8bbd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"700b4a55-4b30-4270-9d06-5479728f5bbc"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"3221b964-01f1-448f-a0ef-00a76883dad8"}}],"id":"68458582-f4c3-430d-b6f1-74911ea50b5a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/rating/","host":["localhost"],"port":"4000","path":["book","rating",""]}},"response":[]}],"id":"ed73cf31-1fe9-4045-a62e-0f9d828840a4"},{"name":"/:title","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Response has multiple entries\", () => {","    const body = pm.response.json();","    pm.expect(body.entries).to.be.an('array').that.is.not.empty;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"c2823b19-1a26-40b9-9acb-1d734f429e17"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"bab78b88-6532-47b4-a802-98287be6a2f8"}}],"id":"150cb616-edd2-4e81-b197-4e3954268eb7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/title/hunger","protocol":"http","host":["localhost"],"port":"4000","path":["book","title","hunger"]}},"response":[]},{"name":"404: Book Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Title not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Title not found\");","});"],"type":"text/javascript","packages":{},"id":"d4b5cc09-c29b-4a46-ab05-b682bb0da4be"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"00b564b7-18c9-433b-a492-e10191c8d530"}}],"id":"63fcacde-546e-4d29-bed1-cb2196ff4df1","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/title/something so absurd that it isn't real","protocol":"http","host":["localhost"],"port":"4000","path":["book","title","something so absurd that it isn't real"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"b3b88847-ff70-4a4b-99d5-478c4046a79d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"dfdd220e-357c-4dfd-ad60-eb755f59b077"}}],"id":"49711100-f68b-412c-ac9c-25ab781bbd40","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"fb03e049-f4f0-4f01-9c0e-36b5f5291199"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"eb168479-0a69-4391-946b-179789d13242"}}],"id":"9b7e89ed-cd4a-45fb-8855-7d813b32278f","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"bde2f159-9c4d-4fa0-b458-58bab0c2a34d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"9a9de9db-7578-4a17-9f06-bdabdb0c396c"}}],"id":"4ade2a7b-8ac4-46b0-9a59-9ac239c67675","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/title/","host":["localhost"],"port":"4000","path":["book","title",""]}},"response":[]}],"id":"c0435b58-0081-4952-8475-f1c2d78670db"},{"name":"/ (posting a new book)","item":[{"name":"201: Created","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 201\", function () {","    pm.response.to.have.status(201);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","pm.test(\"Book added successfully\", function () {","    const responseJson = pm.response.json();","    pm.expect(responseJson.message).to.eql(\"Book added successfully\");","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","        body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","    ","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});"],"type":"text/javascript","packages":{},"id":"832fd302-da68-47ad-b771-1befc0391cc3"}},{"listen":"prerequest","script":{"exec":["// Book title with length > 3","let title = `${pm.variables.replaceIn(\"{{$randomWord}}\")} of ${pm.variables.replaceIn(\"{{$randomWord}}\")}`;","pm.environment.set(\"title\", title);","","// Published date between 1000 and the current year","let date = Math.floor(Math.random() * (new Date().getFullYear() - 1000 + 1)) + 1000;","pm.environment.set(\"date\", date);","","// ISBN-13: starts with 978 and adds a random 10-digit number","let isbn = \"978\" + Math.floor(1000000000 + Math.random() * 9000000000);","pm.environment.set(\"isbn\", isbn);","","// Author name using Postman's built-in random name variables","let author = `${pm.variables.replaceIn(\"{{$randomFirstName}}\")} ${pm.variables.replaceIn(\"{{$randomLastName}}\")}`;","pm.environment.set(\"author\", author);"],"type":"text/javascript","packages":{},"id":"c8a7f200-4e61-4c5a-bcdb-eec012e3b22e"}}],"id":"51479229-ecff-4889-b35e-60f8b189362e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"title\": \"{{title}}\",\n    \"author\": \"{{author}}\",\n    \"isbn\": \"{{isbn}}\",\n    \"date\": \"{{date}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/","protocol":"http","host":["localhost"],"port":"4000","path":["book",""]}},"response":[]},{"name":"400: Bad Request/Miss Parameters","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Title is required and should be at least 3 characters'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Title is required and should be at least 3 characters\");","});"],"type":"text/javascript","packages":{},"id":"894334f3-4c4d-482d-aa1e-8705c0fe3a94"}},{"listen":"prerequest","script":{"exec":["// Book title with length > 3","let title = `${pm.variables.replaceIn(\"{{$randomWord}}\")} of ${pm.variables.replaceIn(\"{{$randomWord}}\")}`;","pm.environment.set(\"title\", title);","","// Published date between 1000 and the current year","let date = Math.floor(Math.random() * (new Date().getFullYear() - 1000 + 1)) + 1000;","pm.environment.set(\"date\", date);","","// ISBN-13: starts with 978 and adds a random 10-digit number","let isbn = \"978\" + Math.floor(1000000000 + Math.random() * 9000000000);","pm.environment.set(\"isbn\", isbn);","","// Author name using Postman's built-in random name variables","let author = `${pm.variables.replaceIn(\"{{$randomFirstName}}\")} ${pm.variables.replaceIn(\"{{$randomLastName}}\")}`;","pm.environment.set(\"author\", author);"],"type":"text/javascript","packages":{},"id":"fb1c4b24-3268-44e8-9ab1-74892634b7ef"}}],"id":"2ef2559d-5133-4421-b514-59295e172ba8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"title\": \"\",\n    \"author\": \"{{author}}\",\n    \"isbn\": \"{{isbn}}\",\n    \"date\": \"{{date}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/","protocol":"http","host":["localhost"],"port":"4000","path":["book",""]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"4a905062-19d6-4a36-8d83-829b8ad7bd54"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"1fff7465-ab5f-4fe0-acc9-948c9d1227fa"}}],"id":"2a32b209-57fd-4ea8-b118-e672382118f2","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"64fe7ca7-1729-436b-aa4d-81c42e80a9f9"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"8dd6541c-1452-4195-8251-db71b0ed36f3"}}],"id":"4a78c513-4a3a-4d91-8e3c-14c2cd0f98b3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"5f735f23-02de-4e28-a5ed-3ef2eedc623b"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"2143b759-4b7c-42b3-994b-0c11cb92a35c"}}],"id":"27447b2e-f468-4ada-9eea-bc5918645e48","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/","host":["localhost"],"port":"4000","path":["book",""]}},"response":[]}],"id":"4a65f52c-2b98-4bd0-9484-976a4ee0ab8f"},{"name":"/rate/:rating","item":[{"name":"200: Updated","event":[{"listen":"prerequest","script":{"exec":["// Generate random numbers between 0 and 10000 for each rating","pm.environment.set(\"one\", Math.floor(Math.random() * 10001));  // 1-star rating","pm.environment.set(\"two\", Math.floor(Math.random() * 10001));  // 2-star rating","pm.environment.set(\"three\", Math.floor(Math.random() * 10001));  // 3-star rating","pm.environment.set(\"four\", Math.floor(Math.random() * 10001));  // 4-star rating","pm.environment.set(\"five\", Math.floor(Math.random() * 10001));  // 5-star rating",""],"type":"text/javascript","packages":{},"id":"e8abe319-8819-401d-9d50-73171d4d5029"}},{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {","    pm.response.to.have.status(200);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","// BOOK VALIDATION","","pm.test(\"Response to have id in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"id\");","    });","});","","pm.test(\"Response to have IBook object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry).to.have.ownProperty(\"IBook\");","    });","});","","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");","    });","});","","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {","    const body = pm.response.json();","    body.entries.forEach((entry) => {","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");","    });","});","","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);","        });","    });","});","","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {","    const body = pm.response.json();","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));","    body.entries.forEach((entry) => {","        fields.forEach((field) => {","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);","        });","    });","});","",""],"type":"text/javascript","packages":{},"id":"bd5202b5-da8a-4dd1-952b-8bef92d297cd"}}],"id":"b16c502d-cc2b-45e9-a7ab-8b6e266e2ec5","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"rating_1_star\": \"{{one}}\",\n    \"rating_2_star\": \"{{two}}\",\n    \"rating_3_star\": \"{{three}}\",\n    \"rating_4_star\": \"{{four}}\",\n    \"rating_5_star\": \"{{five}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/rate/4","protocol":"http","host":["localhost"],"port":"4000","path":["book","rate","4"]}},"response":[]},{"name":"400: Bad Requets","event":[{"listen":"prerequest","script":{"exec":["// Generate random numbers between 0 and 10000 for each rating","pm.environment.set(\"one\", Math.floor(Math.random() * 10001));  // 1-star rating","pm.environment.set(\"two\", Math.floor(Math.random() * 10001));  // 2-star rating","pm.environment.set(\"three\", Math.floor(Math.random() * 10001));  // 3-star rating","pm.environment.set(\"four\", Math.floor(Math.random() * 10001));  // 4-star rating","pm.environment.set(\"five\", Math.floor(Math.random() * 10001));  // 5-star rating",""],"type":"text/javascript","packages":{},"id":"f278d3b5-d836-4327-b052-5cfcc6a0f56a"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'No valid rating fields provided for update'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"No valid rating fields provided for update\");","});"],"type":"text/javascript","packages":{},"id":"1fd93a77-1fa2-4c7c-826a-461961ec9993"}}],"id":"49ae249d-ec78-49c4-85c1-028a0354d5a3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/rate/3","protocol":"http","host":["localhost"],"port":"4000","path":["book","rate","3"]}},"response":[]},{"name":"404: Not Found","event":[{"listen":"prerequest","script":{"exec":["// Generate random numbers between 0 and 10000 for each rating","pm.environment.set(\"one\", Math.floor(Math.random() * 10001));  // 1-star rating","pm.environment.set(\"two\", Math.floor(Math.random() * 10001));  // 2-star rating","pm.environment.set(\"three\", Math.floor(Math.random() * 10001));  // 3-star rating","pm.environment.set(\"four\", Math.floor(Math.random() * 10001));  // 4-star rating","pm.environment.set(\"five\", Math.floor(Math.random() * 10001));  // 5-star rating",""],"type":"text/javascript","packages":{},"id":"8285e277-70f1-4fb7-8022-ae02b49c290e"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Book not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Book not found\");","});"],"type":"text/javascript","packages":{},"id":"a6b6767e-a3a3-45c1-a387-91e2c688252c"}}],"id":"38902d10-e372-47ba-a91f-9e84d5008469","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"rating_1_star\": \"{{one}}\",\n    \"rating_2_star\": \"{{two}}\",\n    \"rating_3_star\": \"{{three}}\",\n    \"rating_4_star\": \"{{four}}\",\n    \"rating_5_star\": \"{{five}}\"\n}\n","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/rate/1000000","protocol":"http","host":["localhost"],"port":"4000","path":["book","rate","1000000"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"adac783c-9a18-4189-b5ef-def295f64fe4"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"4ec1ff7b-4ddb-4e43-83d4-7ebbb45880ec"}}],"id":"64c6cbb6-ead5-4075-b2d9-0e97428cb075","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"PUT","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"87b83a2f-954c-41e8-90e8-11948b79d2ac"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"cc8ff4bb-40bc-49a5-b1f8-cabfcd7f1458"}}],"id":"84c0dcf1-f4e2-4e9e-9ad4-3d58c879bc8b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"e9c0840a-8fea-4abc-8cab-76d3c11cd7a5"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"07f2e3e2-64d7-4991-8a5d-f82976e5b62f"}}],"id":"f65a29d1-433b-498e-a7ec-2db8a7cafcc7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/rate/","host":["localhost"],"port":"4000","path":["book","rate",""]}},"response":[]}],"id":"99adde1e-cf58-4135-8c1a-82b236bad345"},{"name":"/del/:isbn","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});"],"type":"text/javascript","packages":{},"id":"1422012b-76f0-424b-856e-0219aee025a8"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"875e01e4-04b6-47f0-b2cc-abd590a0675c"}}],"id":"0949b4b7-ce3f-47b5-9cb3-2bf2e4e546e3","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:4000/book/isbn/9780062001030","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780062001030"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"0bd9a14a-3c78-421b-8d33-433c3070164d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"8d931fc9-7a66-498d-b586-0a0ac68a313e"}}],"id":"68a2202a-115a-41ed-80c2-2546a5932328","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"DELETE","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"b3145524-22a1-4e44-ad25-aba1d7ca3f2d"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"8d502089-22c2-40ee-bb96-ffdaa7718cab"}}],"id":"38d81ee7-60e1-4a0a-9296-afa0f9bf4748","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"400: Bad Request","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'ISBN must be a 13-digit number'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"ISBN must be a 13-digit number\");","});"],"type":"text/javascript","packages":{},"id":"a4938d07-8687-40b4-a525-f195ff395470"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"bc3d7cf4-f2d1-4232-8abd-333bcbe1ed89"}}],"id":"4d3efe95-f4bc-48d8-9203-2481e21604d7","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/0","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","0"]}},"response":[]},{"name":"404: Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Book not found'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Book not found\");","});"],"type":"text/javascript","packages":{},"id":"b92877c6-8658-4ae9-91d4-21685ac8e2a5"}},{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"14247556-2966-462e-b1fc-1545beeb5e58"}}],"id":"03f39732-7258-4283-834f-468253b067b4","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/isbn/9780439023480","protocol":"http","host":["localhost"],"port":"4000","path":["book","isbn","9780439023480"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"1bda1bf6-2823-48b2-b317-778fa60043c3"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"ebd166d0-f83b-4daa-b5cd-059ca31b18ef"}}],"id":"7ff822d1-d48e-40f8-882e-5043e4b6798b","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/isbn/","host":["localhost"],"port":"4000","path":["book","isbn",""]}},"response":[]}],"id":"b78ae46f-67a6-4c45-9d87-33a6e2f22613"},{"name":"/del/:seriesName","item":[{"name":"200: OK","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is Success 200\", () => {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response to have id in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"id\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry).to.have.ownProperty(\"IBook\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IRatings object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IRatings\");\r","    });\r","});\r","\r","pm.test(\"Response to have IBook.IUrlIcons object in each entry\", () => {\r","    const body = pm.response.json();\r","    body.entries.forEach((entry) => {\r","        pm.expect(entry.IBook).to.have.ownProperty(\"IUrlIcon\");\r","    });\r","});\r","\r","pm.test(\"Response to have valid IBook elements isbn13, authors, publication, original_title, title, IRatings, IUrlIcon\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIBookFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IRatings elements average, count, rating_1, rating_2, rating_3, rating_4, rating_5\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIRatingsFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IRatings).to.have.ownProperty(field);\r","        });\r","    });\r","});\r","\r","pm.test(\"Response to have valid IUrlIcon elements large, small\", () => {\r","    const body = pm.response.json();\r","    const fields = JSON.parse(pm.environment.get(\"expectedIUrlIconFields\"));\r","    body.entries.forEach((entry) => {\r","        fields.forEach((field) => {\r","            pm.expect(entry.IBook.IUrlIcon).to.have.ownProperty(field);\r","        });\r","    });\r","});"],"type":"text/javascript","packages":{},"id":"db3f65ca-56cc-46a0-b6f1-a8eaec39f178"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"d2a27af8-eda4-45d1-a074-d1a979a5bf85"}}],"id":"f70ef000-99d2-4c3f-b61a-16a15cbabe5a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/series/Twilight","protocol":"http","host":["localhost"],"port":"4000","path":["book","series","Twilight"]}},"response":[]},{"name":"400: Bad Request","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 400\", () => {","    pm.response.to.have.status(400);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'Series name is required'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"Series name is required\");","});"],"type":"text/javascript","packages":{},"id":"71a2cfa1-f2a6-472a-8219-cff57a516f64"}},{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"0ae9f0a4-8930-464c-87c3-b11d911a5d10"}}],"id":"6b6f44af-7f04-459c-a464-02e408bc80d6","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/series/","protocol":"http","host":["localhost"],"port":"4000","path":["book","series",""]}},"response":[]},{"name":"404: Not Found","event":[{"listen":"test","script":{"exec":["pm.test(\"Response is error 404\", () => {","    pm.response.to.have.status(404);","});","","pm.test(\"Response is a valid JSON\", () => {","    pm.expect(pm.response).to.be.json;","});","","const body = pm.response.json();","pm.test(\"Response to have message 'No books found with the specified series name or title'\", () => {","    pm.expect(body).to.have.ownProperty(\"message\");","    pm.expect(body.message).to.eql(\"No books found with the specified series name or title\");","});"],"type":"text/javascript","packages":{},"id":"b684c596-d95d-44c3-a20f-7e24405c2ed8"}},{"listen":"prerequest","script":{"exec":[],"type":"text/javascript","id":"45703ecb-c3fd-4a72-b526-4ded1da8f973"}}],"id":"6247f31f-b7b9-4115-b9d8-dbe84ab66568","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"url":{"raw":"http://localhost:4000/book/series/1230","protocol":"http","host":["localhost"],"port":"4000","path":["book","series","1230"]}},"response":[]},{"name":"401: Unauthorized","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"a970fac8-357f-47b0-85de-93df230bdaa5"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 401\", () => {\r","    pm.response.to.have.status(401);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Invalid or missing JWT token'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Invalid or missing JWT token\");\r","});"],"type":"text/javascript","packages":{},"id":"a118e4b9-8791-4490-9f18-5eff10e589df"}}],"id":"8dff631e-25d1-45ce-a28b-670c5a74f7f8","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"DELETE","header":[{"key":"x-access-token-shouldn't-work","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"403: Forbidden","event":[{"listen":"prerequest","script":{"exec":["pm.environment.set(\"new_password\", pm.variables.replaceIn('{{$randomPassword}}' + \"@\" + \"1\"));\r",""],"type":"text/javascript","packages":{},"id":"ffd485e7-74a7-4dfa-95cc-7fcbe347c66b"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 403\", () => {\r","    pm.response.to.have.status(403);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Token is not valid'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Token is not valid\");\r","});\r",""],"type":"text/javascript","packages":{},"id":"9b9ccc82-1d0a-4aaf-b305-a582534f88e3"}}],"id":"522056d9-24f6-489b-9c0a-17339cb3e76d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"shouldn't work","type":"text"}],"body":{"mode":"raw","raw":"{\n    \"oldPassword\" : \"{{old_password}}\",\n    \"newPassword\" : \"{{new_password}}\",\n    \"confirmNewPassword\" : \"{{new_password}}\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/changePassword","host":["localhost"],"port":"4000","path":["changePassword"]}},"response":[]},{"name":"500: Server Error","event":[{"listen":"prerequest","script":{"exec":[""],"type":"text/javascript","packages":{},"id":"12678d1d-5951-4cff-a17c-e1b2713bc004"}},{"listen":"test","script":{"exec":["pm.test(\"Response is error 500\", () => {\r","    pm.response.to.have.status(500);\r","});\r","\r","pm.test(\"Response is a valid JSON\", () => {\r","    pm.expect(pm.response).to.be.json;\r","});\r","\r","const body = pm.response.json();\r","pm.test(\"Response to have message 'Server error - contact support'\", () => {\r","    pm.expect(body).to.have.ownProperty(\"message\");\r","    pm.expect(body.message).to.eql(\"Server error - contact support\");\r","});"],"type":"text/javascript","packages":{},"id":"87452a16-f574-40bd-8bdf-397bb1592012"}}],"id":"a8b4d524-c9e3-43d4-8160-d7a603732a5e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[{"key":"x-access-token","value":"{{User Token}}","type":"text"}],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"localhost:4000/book/series/","host":["localhost"],"port":"4000","path":["book","series",""]}},"response":[]}],"id":"e13b60d9-08ea-4a6a-9a66-2e6514648bfe"}],"auth":{"type":"bearer","bearer":[{"key":"token","value":"{{Personal Token}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"type":"text/javascript","packages":{},"exec":[""],"id":"6a041853-d010-44f4-95b1-51313dbf631f"}},{"listen":"test","script":{"type":"text/javascript","packages":{},"exec":[""],"id":"9246b598-9be0-4057-b4ad-8130c1627f68"}}]}